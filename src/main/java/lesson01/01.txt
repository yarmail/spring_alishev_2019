Урок 1: Введение. Зачем изучать Spring?

Фреймворк - это больше, чем просто библиотека
Библиотека предоставляет методы
Фреймворк предоставляет решения

---

Spring Framework - это набор из множества компонентов

Важные компоненты Spring Framework:
- Контекст приложения (Application Context)
и Внедрение Зависимостей (Dependency Injection)

- Удобный и эффективный доступ к БД (замена JDBC)
Spring предоставляет несколько интрументов для
взаимодействия с БД

- Компонет для разработки Web-приложений на Java
(Spring MVC)
Также Spring MVC часто используется для мобильных
приложений

---

Несколько слов о некоторых других компонентах:
- Spring Security - безопасность приложения,
- Spring Boot - упрощает разработку Spring

Другие компоненты - spring.io/projects

---

Типичное приложение java - это набор Java объектов,
которые взаимодействуют друг с другом и ссылаются друг на друга
(рисунок typicalAppJava.png)
Ссылки между объектами называются зависимостями
Чем больше и сложнее приложение, тем больше объектов и
сложнее иерархия между ними

Когда Java приложение запускается, все необходимые
Java объекты создаются и помещаются в оперативную память.
В ходе работы приложения, объекты могут добавляться/удаляться.
Также могут изменяться связи между объектами.
Spring помогает нам в работе с множеством объектов.

---

Пример 1: class Car зависит от классов Engine, Wheel x 4,
Transmission.
Где-то в классе Car мы должны прописать
Engine engine = new Engine();
и так для каждого класса
Кроме того, у кажого из этих классов тоже могут быть
зависимости. Таким образом в больших проектах
сложно представить себе всю систему объектов
и много лишнего кода

---

Пример 2. Предположим, что объект класса Database
должен быть один для всех других классов (синглтон) и
должен быть внедрен в них, чтобы они могли пользоваться
им
Это тоже можно решиить Spring.

---

Описание Application Context и Dependency Injection
(файл AppContext&DI.txt)
