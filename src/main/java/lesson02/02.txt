Spring Framework. Урок 2: Первое приложение (IntelliJ Idea).

Создание простейшего приложения

При создании нового приложения мы можем выбрать
все необходимые библиотеки в самой Idea
Но подгружаемые библиотеки и компоненты
могут быть не той версии, которую вам хотелось бы

Другой подход - это использвание Maven,
это поможет больше контролировать процесс установки
библиотеки компонентов - это может быть полезным.

---

В Maven можно создать проект с использованием
архетипов - создание типичных папок для тех или иных проектов
например: maven-archetype-webapp,
этот архетип, который используется при создании
maven приложений веб проектов
При создании maven приложения мы должны заполнить
Groupid - он должен быть уникальной строкой -
(адресом в инете, для размещения этого ресурса?)
например:
Groupid: ru.alishev.springcourse
и
ArtifactId - название нашего проекта, например
ArtifactId - spring-app1

---

На этом уроке мы создадим простейшее приложение Spring Core
для подключения через Maven необходимых библиотек
заходим на сайт
https://mvnrepository.com/
и вводим в поиск название зависимостей, которые мы хотим импортировать

1. Spring core - Это основа спринга (вероятно всегда надо подключать)
Выбрали версию 5.1.4 и поместили в pom, в dependency

2. Spring-beans - с помощью этой зависимости мы создаем объекты(бины)
Бинами принято называть

3. Spring-context (само приложение?)

---

В данном примере (уроке) мы просто создадим один класс
и затем, с помощью Spring framework мы создадим из этого
класса один объект и затем, в Main классе мы обратимся
к spring app context и из контекта мы извлечем
созданный контекст

---

Создаем класс TestBean и объекты этого клааса
Spring будет создавать в этом уроке

Далее создаем lesson02.xml в папке resources
(К сожалению класс ClassPathXmlApplicationContext
потом ищет этот файл именно там,
возможно в дальнейшем это можно будет как-то исправить)
Удачным выбором оказалось создавать файл .xml через меню

File -> New  -> XML Configuration - Spring Config

Появляется сразу нужная шапка в виде ссылок на файлы xmlns
В этом файле описываем бин TestBean (создаем из нашего класса)

Следующий шаг - надо сделать так, чтобы Spring на основе
конфигурационного файла создал из класса бин и положил
его в свой application context

Создаем TestSpring.java в котором мы будем тестировать
работу нашего Spring framework.
В нем вызываем (создем) контекст
В контекст загружаем конф. файл с бинами (создаем бины)
Уже из контекста вызываем получившийся бин
Проверяем работу бина вызывая его поле.